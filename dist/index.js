import{wrap as e,expose as s}from"comlink";class t{constructor(e){this.rAF=0,this.state={},this.canvas=e.canvas,this.isWorker=e.isWorker}getState(){return this.state}setState(e={}){this.state=Object.assign(Object.assign({},this.state),e)}}function n({canvas:s,workerUrl:t},n,a=!1){return new Promise(((r,o)=>{if(s.transferControlToOffscreen&&!a)try{const a=new Worker(t,{type:"module"}),o=s.transferControlToOffscreen();a.addEventListener("message",(s=>{if("ready"===s.data){const s=e(a);r(s)}})),a.postMessage({message:"init",options:Object.assign({canvas:o,isWorker:!0},n)},[o])}catch(e){o(e)}else{const e=document.createElement("script"),a=t instanceof URL?t.toString():t;e.src=a,e.async=!0,e.onload=()=>{r(window[a](Object.assign({canvas:s,isWorker:!1},n))),window[a]=null},e.onerror=e=>o(e),document.head.appendChild(e)}}))}function a(e){self.addEventListener("message",(({data:{message:t,options:n}})=>{"init"===t&&(s(e(n)),self.postMessage("ready"))}))}export{t as BaseEntity,n as createOffscreenCanvas,a as initializeWorker};
